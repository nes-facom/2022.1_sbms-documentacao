{
	"info": {
		"_postman_id": "f40a581b-9575-4c24-af52-ed95703bfcc3",
		"name": "CRUD Pessoa",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20572652"
	},
	"item": [
		{
			"name": "TU30-admin-cadastrar-pessoas",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authAdminC}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"etniaPrincipal\": \"BRANCA\",\r\n        \"genero\": \"MASCULINO\",\r\n        \"nascimento\": \"2002-02-22\",\r\n        \"nome\": \"Caio da Silva\",\r\n        \"etniaSecundaria\": \"INDIGENA\"\r\n}"
				},
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido com dados etniaPrincipal, genero, nascimento, nome, etniaSecundaria e o token de autenticação do usuário ADMIN, a fim de cadastrar uma nova pessoa.\n\nResultado: Status 200 OK. Admin consegue cadastrar nova a pessoa."
			},
			"response": []
		},
		{
			"name": "TU31-admin-mostrar-pessoas",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQURNSU4iLCJpYXQiOjE2NTEwMDA4MTgsImV4cCI6MTY1MTA4NzIxOCwic3ViIjoiMSJ9.pzAnmPuNdFvgTcD1TzvPiS0siOlj-zDvujwCwX0kN-Q"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' com o token de autenticação do usuário ADMIN, a fim de listas todas as pessoas cadastradas.\n\nResultado: Status 200 OK. Admin consegue visualizar todas as pessoas cadastradas."
			},
			"response": []
		},
		{
			"name": "TU32-admin-mostrar-pessoas-individual",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQURNSU4iLCJpYXQiOjE2NTEwMDA4MTgsImV4cCI6MTY1MTA4NzIxOCwic3ViIjoiMSJ9.pzAnmPuNdFvgTcD1TzvPiS0siOlj-zDvujwCwX0kN-Q"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}/3",
					"host": [
						"{{sbms-pessoa}}"
					],
					"path": [
						"3"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people/3' juntamente com o JSON preenchido o token de autenticação do usuário ADMIN, a fim de mostrar uma determinada pessoa.\n\nResultado: Status 200 OK. Admin consegue visualizar a pessoa indicada pelo ID na URL."
			},
			"response": []
		},
		{
			"name": "TU33-coordenador-cadastrar-pessoas",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authCoordC}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"etniaPrincipal\": \"PARDA\",\r\n        \"genero\": \"FEMININO\",\r\n        \"nascimento\": \"2002-03-22\",\r\n        \"nome\": \"João 2 da Silva\",\r\n        \"etniaSecundaria\": \"INDIGENA\"\r\n}"
				},
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido com dados etniaPrincipal, genero, nascimento, nome, etniaSecundaria e o token de autenticação do usuário COORDENADOR, a fim de cadastrar uma nova pessoa.\n\nResultado: Status 200 OK. Coordenador consegue cadastrar nova pessoa."
			},
			"response": []
		},
		{
			"name": "TU34-coordenador-mostrar-pessoas",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQ09PUkRFTkFET1IiLCJpYXQiOjE2NTEwMDQ0OTksImV4cCI6MTY1MTA5MDg5OSwic3ViIjoiMTIifQ.7-9WYX_Fy5bd4wyMIkJTr67OP-Y9zZsJaR08qe1Hwbk"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido o token de autenticação do usuário COORDENADOR, a fim de mostrar todas as pessoas cadastradas.\n\nResultado: Status 200 OK. Coordenador consegue visualizar todas as pessoas."
			},
			"response": []
		},
		{
			"name": "TU35-coordenador-mostrar-pessoas-individual",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authCoordC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}/1",
					"host": [
						"{{sbms-pessoa}}"
					],
					"path": [
						"1"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people/1' juntamente com o JSON preenchido o token de autenticação do usuário COORDENADOR, a fim de mostrar uma determinada pessoa.\n\nResultado: Status 200 OK. Coordenador consegue visualizar a pessoa indicada pelo ID na URL."
			},
			"response": []
		},
		{
			"name": "TU36-arrolador-cadastrar-pessoas",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQVJST0xBRE9SIiwiaWF0IjoxNjUxNjA4NzM2LCJleHAiOjE2NTE2OTUxMzYsInN1YiI6IjIyIn0.dYo1LcXYjqSVxDpxWIyrfjqGTxFNjuaJGhXY7N39Ldo"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"etniaPrincipal\": \"PARDA\",\r\n        \"genero\": \"FEMININO\",\r\n        \"nascimento\": \"2002-03-22\",\r\n        \"nome\": \"Joana da Silva\",\r\n        \"etniaSecundaria\": \"INDIGENA\"\r\n}"
				},
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' preenchido com dados etniaPrincipal, genero, nascimento, nome, etniaSecundaria e informando o token de autenticação do usuário ARROLADOR, a fim de cadastrar uma nova pessoa.\n\nResultado: : Status 200: OK. Arrolador consegue cadastrar novas pessoas\n\nRelatório de Bugs:\n\n\\- 02/05: Status 401 Unauthorized. Arrolador não consegue cadastrar nova pessoa. (To Fix)\n\n\\- 03/05: Status 200: OK. Arrolador consegue cadastrar novas pessoas (Fixed - Demetrius Panovitch)"
			},
			"response": []
		},
		{
			"name": "TU37-arrolador-mostrar-pessoas",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authArrolC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido e o token de autenticação do usuário ARROLADOR, a fim de mostrar todas as pessoas cadastradas.\n\nResultado: Status 200: OK. Arrolador consegue visualizar todas as pessoas cadastradas\n\nRelatório de Bugs:\n\n\\- 27/04: Status 401 Unauthorized. Arrolador não consegue visualizar pessoas cadastradas.\n\n\\- 03/05: Status 200: OK. Arrolador consegue visualizar todas as pessoas cadastradas (Fixed - Demetrius Panovitch)"
			},
			"response": []
		},
		{
			"name": "TU38-arrolador-mostrar-pessoas-individual",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authArrolC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}/1",
					"host": [
						"{{sbms-pessoa}}"
					],
					"path": [
						"1"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.\n\nDescrição: É requisitado a url localhost:3000/people/1' juntamente com o token de autenticação do usuário ARROLADOR, a fim de mostrar uma determinada pessoa.\n\nResultado:\n\nRelatório de Bugs:\n\n\\- 02-05: Status 401 Unauthorized. Arrolador não consegue visualizar pessoa individualmente. (To Fix)\n\n\\- 03/05: Status 200: OK. Arrolador consegue visualizar todas as pessoas cadastradas (Fixed - Demetrius Panovitch)"
			},
			"response": []
		},
		{
			"name": "TU39-dentista-cadastrar-pessoas",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiREVOVElTVEEiLCJpYXQiOjE2NTE2MDgxMDgsImV4cCI6MTY1MTY5NDUwOCwic3ViIjoiMjEifQ.J6vjtZdsscxmG7mgPDVLujJTQQDul7tu6K4AyhDaUmU"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"etniaPrincipal\": \"BRANCA\",\r\n        \"genero\": \"FEMININO\",\r\n        \"nascimento\": \"2002-09-12\",\r\n        \"nome\": \"Helena da Silva\",\r\n        \"etniaSecundaria\": \"PARDA\"\r\n}"
				},
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido com dados etniaPrincipal, genero, nascimento, nome, etniaSecundaria e o token de autenticação do usuário DENTISTA, a fim de cadastrar uma nova pessoa.\n\nResultado:\n\nRelatório de Bugs:\n\n\\-02/05: Status 401 Unauthorized. Dentista não consegue cadastrar nova pessoa. (To Fix)\n\n\\-03/05: Status 200: OK. Dentista consegue cadastrar novas pessoas. (Fixed - Demetrius Panovitch)"
			},
			"response": []
		},
		{
			"name": "TU40-dentista-mostrar-pessoas",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authDentC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.\n\nDescrição: É requisitado a url localhost:3000/people' juntamente com o token de autenticação do usuário ARROLADOR, a fim de mostrar todas as pessoas cadastradas.\n\nResultado:\n\nRelatório de Bugs:\n\n\\- 27/04: Status 401 Unauthorized. Dentista não consegue visualizar pessoas cadastradas.\n\n\\- 09/05: Status 200 Ok. Dentista consegue visualizar pessoas cadastradas."
			},
			"response": []
		},
		{
			"name": "TU41-dentista-mostrar-pessoas-individual",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiREVOVElTVEEiLCJpYXQiOjE2NTEwMDQ1NzEsImV4cCI6MTY1MTA5MDk3MSwic3ViIjoiMTEifQ.0mcCgNejcv144wdqrpa9cU0yxP4AmUCO0CQwWpMkOAM"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}/1",
					"host": [
						"{{sbms-pessoa}}"
					],
					"path": [
						"1"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nDescrição: É requisitado a url 'localhost:3000/people/1' juntamente com o token de autenticação do usuário DENTISTA, a fim de mostrar uma determinada pessoa.\n\nResultado:\n\nRelatório de Bugs:\n\n\\- 02/05 -Status 401 Unauthorized. Dentista não consegue visualizar pessoa individualmente.(To Fix)\n\n\\- 03/05 - Status 200: OK. Dentista consegue visualizar todas as pessoas cadastradas (Fixed - Demetrius Panovitch)"
			},
			"response": []
		},
		{
			"name": "TU42-assistente-cadastrar-pessoas",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiQVNTSVNURU5URSIsImlhdCI6MTY1MTYxMDE3MiwiZXhwIjoxNjUxNjk2NTcyLCJzdWIiOiIyMyJ9.AoOCob_R9N79g6G-_dXVCJy3bWwhTEtS7tm7pkXxvN0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"etniaPrincipal\": \"BRANCA\",\r\n        \"genero\": \"FEMININO\",\r\n        \"nascimento\": \"2002-09-12\",\r\n        \"nome\": \"Helen da Silva\",\r\n        \"etniaSecundaria\": \"PARDA\"\r\n}"
				},
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.  \nBody: São dados, o \"corpo\" do teste, no nosso caso o JSON referente aos dados que serão requisitados e testados.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido com dados etniaPrincipal, genero, nascimento, nome, etniaSecundaria e o token de autenticação do usuário ASSISTENTE, a fim de cadastrar uma nova pessoa.\n\nResultado:\n\nRelatório de Bugs:\n\n\\- 02/05- Status 401 Unauthorized. Assistente não consegue cadastrar nova pessoa. (To Fix)\n\n\\- 03/05 - Status 200: OK. Assistente consegue cadastrar todas as pessoas cadastradas (Fixed - Demetrius Panovitch)"
			},
			"response": []
		},
		{
			"name": "TU43-assistente-mostrar-pessoas",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authAssistC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}",
					"host": [
						"{{sbms-pessoa}}"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.\n\nDescrição: É requisitado a url 'localhost:3000/people' juntamente com o JSON preenchido o token de autenticação do usuário ASSISTENTE, a fim de mostrar todas as pessoas cadastradas.\n\nResultado: Status 200 OK. Assistente consegue visualizar todas as pessoas cadastradas."
			},
			"response": []
		},
		{
			"name": "TU44-assistente-mostrar-pessoas-individual",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authAssistC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}/1",
					"host": [
						"{{sbms-pessoa}}"
					],
					"path": [
						"1"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.\n\nDescrição: É requisitado a url localhost:3000/people/1' juntamente com o JSON preenchido o token de autenticação do usuário ASSISTENTE, a fim de mostrar uma determinada pessoa.\n\nResultado: Status 200 OK. Assistente consegue visualizar a pessoa indicada pelo ID na URL."
			},
			"response": []
		},
		{
			"name": "TU45-mostrar-idade-pessoa",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "{{authAdminC}}"
					}
				],
				"url": {
					"raw": "{{sbms-pessoa}}/1/age",
					"host": [
						"{{sbms-pessoa}}"
					],
					"path": [
						"1",
						"age"
					]
				},
				"description": "Headers: São as variáveis que indicam o tipo de conteudo (JSON) e o token de autenticação.\n\nDescrição: É requisitado a url localhost:3000/people/1' juntamente com o JSON preenchido o token de autenticação do usuário ASSISTENTE, a fim de mostrar uma determinada pessoa.\n\nResultado: Status 200 OK. Assistente consegue visualizar a pessoa indicada pelo ID na URL."
			},
			"response": []
		},
		{
			"name": "heroku-mostrar-pessoas",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1NTc0NzU2NiwiZXhwIjoxNjU1ODMzOTY2fQ.G3eYpyRyKnkZQUhwAs-dft-7PQgIPs5H1bBkoeaa3Qo",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{heroku}}people",
					"host": [
						"{{heroku}}people"
					]
				},
				"description": "Foram executados os testes TU31, TU34, TU37, TU40 e TU43, nesse caso utilizando a URL do Heroku ([http://saude-bucal-backend.herokuapp.com/](http://saude-bucal-backend.herokuapp.com/)) e todos os usuários listados nos testes conseguiram listar as pessoas cadastradas pela sua respectiva equipe."
			},
			"response": []
		},
		{
			"name": "heroku-cadastrar-pessoas",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEsImlhdCI6MTY1NTc0NzU2NiwiZXhwIjoxNjU1ODMzOTY2fQ.G3eYpyRyKnkZQUhwAs-dft-7PQgIPs5H1bBkoeaa3Qo",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"etniaPrincipal\": \"BRANCA\",\r\n        \"genero\": \"MASCULINO\",\r\n        \"nascimento\": \"2020-02-21\",\r\n        \"nome\": \"Caio da Silva\",\r\n        \"etniaSecundaria\": \"INDIGENA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{heroku}}people",
					"host": [
						"{{heroku}}people"
					]
				},
				"description": "Foram executados os testes TU30, TU33, TU36, T39 e TU42, nesse caso utilizando a URL do Heroku ([http://saude-bucal-backend.herokuapp.com/](http://saude-bucal-backend.herokuapp.com/)) e todos os usuários listados nos testes conseguiram criar novas pessoas."
			},
			"response": []
		}
	]
}